#ifndef TEXT_H
#define TEXT_H

#include "Globals.h"

/*
 * 0 = 48
 * A = 65
 * a = 97
 */


class Text
{
  public:
  static int DisplayText( char* text, int x, int y, bool fromProgMem );
  static int DisplayText( char const* text, int x, int y, bool fromProgMem );
  static int DisplayTextClear( char* text, int x, int y, bool fromProgMem, bool withBorder );
  static int DisplayTextClear( char const* text, int x, int y, bool fromProgMem, bool withBorder );
  static void ConvertIntToChar( int integer );
  static void ConvertIntToChar( int integer, char* bufferToWrite );
  static void ConvertIntToChar( int integer, char* bufferToWrite, int index );
  static int CopyIntoBuffer( const char* Characters, int bufferStartIndex, int charsToCopy );

  Text();
  ~Text();
  void NewDisplayTextOverTime();
  bool DisplayTextOverTime( char* text, int x, int y );
  bool DisplayTextOverTime( char const* text, int x, int y );
  bool DisplayTextOverTimeClear( char* text, int x, int y );
  bool DisplayTextOverTimeClear( char const* text, int x, int y );

  private:

  void ReadTextIntoTypeBuffer( char* text );
  void DeltaFramesToNextChar();
  
  bool TextOverTimeRunning;
  int FramesToNextChar;
  int CharIndex;
};

extern Text* TextManager;

extern char buffer [64];
extern char typeBuffer [128];
extern char clockBuffer[5];
extern char* Comm_A_1;
extern char* Comm_B_1;
extern char* Cmd_Atk;
extern char* Cmd_Repair;
extern char* Cmd_Flee;
extern char* Comm_Result;
extern char* Combat_Result;
extern char* Status_Update;

extern const char* EngageText[];
extern const char* ProjectionText[];
extern const char* Engage_Combat[];
extern const char* Repair_Combat[];
extern const char* Flee_Combat[];
extern const char* Result_Positive[];
extern const char* Result_Negative[];
extern const char* Negative_Response[];
extern const char* Neutral_Response[];
extern const char* Positive_Response[];
extern const char* Victory[];
extern const char* RepairedText[];
/*
 * The reason these must be const is because:
 * variable 'Engage_Stronger_A' must be const in order to be put into read-only section by means of '__attribute__((progmem))'
 * this will require casting throughout the code to have pointers referencing these arrays.  
 */

PROGMEM const extern char TitleScreen[];
PROGMEM const extern char TitleScreen2[];

PROGMEM const extern char THull[];
PROGMEM const extern char TWeapons[];
PROGMEM const extern char TShields[];
PROGMEM const extern char TEngines[];
PROGMEM const extern char TCrew[];
PROGMEM const extern char TFuel[];
PROGMEM const extern char TFood[];
PROGMEM const extern char TGoods[];

PROGMEM const extern char ShipStatus[];
PROGMEM const extern char StatusHelp[];
PROGMEM const extern char StatusHelp2[];
PROGMEM const extern char StatusHelp3[];
PROGMEM const extern char StatusHelp4[];
PROGMEM const extern char SpendEmergencyRepairs[];
PROGMEM const extern char EmergencyRepairs[];

PROGMEM const extern char Repaired[];
PROGMEM const extern char RedShirtsRepaired[];
PROGMEM const extern char HullRepaired[];
PROGMEM const extern char WeaponsRepaired[];
PROGMEM const extern char ShieldsRepaired[];
PROGMEM const extern char EnginesRepaired[];

PROGMEM const extern char PrologueText1[];
PROGMEM const extern char PrologueText2[];

PROGMEM const extern char GameWin1[];
PROGMEM const extern char GameWin2[];
PROGMEM const extern char GameWin3[];
PROGMEM const extern char GameWin4[];

PROGMEM const extern char Engage_Stronger_A[];
PROGMEM const extern char Engage_Stronger_B[];
PROGMEM const extern char Engage_Stronger_C[];
PROGMEM const extern char Engage_Stronger_D[];

PROGMEM const extern char Engage_Equal_A[];
PROGMEM const extern char Engage_Equal_B[];
PROGMEM const extern char Engage_Equal_C[];
PROGMEM const extern char Engage_Equal_D[];

PROGMEM const extern char Engage_Weaker_A[];
PROGMEM const extern char Engage_Weaker_B[];
PROGMEM const extern char Engage_Weaker_C[];
PROGMEM const extern char Engage_Weaker_D[];

PROGMEM const extern char Projection_A[];
PROGMEM const extern char Projection_B[];
PROGMEM const extern char Projection_C[];
PROGMEM const extern char Projection_D[];
PROGMEM const extern char Projection_E[];

PROGMEM const extern char Engage_Combat_A[];
PROGMEM const extern char Engage_Combat_B[];
PROGMEM const extern char Engage_Combat_C[];

PROGMEM const extern char Flee_Combat_A[];
PROGMEM const extern char Flee_Combat_B[];
PROGMEM const extern char Flee_Combat_C[];

PROGMEM const extern char Result_Positive_A[];
PROGMEM const extern char Result_Positive_B[];

PROGMEM const extern char Result_Negative_A[];
PROGMEM const extern char Result_Negative_B[];

PROGMEM const extern char Hail[];
PROGMEM const extern char Yes[];
PROGMEM const extern char No[];

PROGMEM const extern char Negative_Response_A[];
PROGMEM const extern char Negative_Response_B[];
PROGMEM const extern char Negative_Response_C[];

PROGMEM const extern char Neutral_Response_A[];
PROGMEM const extern char Neutral_Response_B[];
PROGMEM const extern char Neutral_Response_C[];
PROGMEM const extern char Neutral_Response_D[];

PROGMEM const extern char Positive_Response_A[];
PROGMEM const extern char Positive_Response_B[];
PROGMEM const extern char Positive_Response_C[];

PROGMEM const extern char Victory_A[];
PROGMEM const extern char Victory_B[];

PROGMEM const extern char Defeat_A[];
PROGMEM const extern char Defeat_B[];
PROGMEM const extern char Defeat_C[];
PROGMEM const extern char Defeat_D[];
PROGMEM const extern char Defeat_E[];

PROGMEM const extern char BeamRecovery[];
PROGMEM const extern char Upgrade[];
PROGMEM const extern char DiscoveredUpgrade[];
PROGMEM const extern char DiscoveredGood[];
PROGMEM const extern char DiscoveredNothing[];
PROGMEM const extern char CapturedCrew[];

PROGMEM const extern char CombatTurn[];
PROGMEM const extern char CombatTakeDamage1[];
PROGMEM const extern char CombatTakeDamage2[];
PROGMEM const extern char CombatTakeDamage3[];
PROGMEM const extern char CombatTakeDamage4[];
PROGMEM const extern char ShieldsHolding[];
PROGMEM const extern char ShieldsDown[];
PROGMEM const extern char DamageReportCrew[];
PROGMEM const extern char DamageReportHull[];
PROGMEM const extern char DamageReportWeapons[];
PROGMEM const extern char DamageReportShields[];
PROGMEM const extern char DamageReportEngines[];

PROGMEM extern const char CombatMenu_Player[];
PROGMEM extern const char CombatMenu_Atk[];
PROGMEM extern const char CombatMenu_Shld[];
PROGMEM extern const char CombatMenu_Hull[];
PROGMEM extern const char CombatMenu_Enemy[];
PROGMEM extern const char CombatMenu_Def[];

PROGMEM extern const char Random_Encounter_1[];
PROGMEM extern const char Random_Encounter_2[];
PROGMEM extern const char Random_Encounter_3[];

PROGMEM extern const char SectorReachedA[];
PROGMEM extern const char SectorReachedB[];

PROGMEM extern const char Colon[];

/*
PROGMEM const unsigned char fontSlow[] = {
  0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 
  0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAE, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAE, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 
  0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAE, 
  0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 
  0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x04, 0xAA, 0x68, 0xC4, 0x28, 0xA0, 0x00, 0x02, 
  0x64, 0xCC, 0xAE, 0x6E, 0xEE, 0x00, 0x20, 0x8E, 
  0x04, 0xAE, 0xC2, 0xC4, 0x44, 0x44, 0x00, 0x02, 
  0xAC, 0x22, 0xA8, 0x82, 0xAA, 0x44, 0x4E, 0x42, 
  0x04, 0x0A, 0x64, 0xE0, 0x44, 0xAE, 0x0E, 0x04, 
  0xA4, 0x44, 0xEC, 0xE4, 0xEE, 0x00, 0x80, 0x24, 
  0x00, 0x0E, 0xC8, 0xA0, 0x44, 0x04, 0x40, 0x08, 
  0xA4, 0x82, 0x22, 0xA8, 0xA2, 0x44, 0x4E, 0x40, 
  0x04, 0x0A, 0x42, 0x60, 0x28, 0x00, 0x80, 0x48, 
  0xC4, 0xEC, 0x2C, 0xE8, 0xEC, 0x08, 0x20, 0x84, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x44, 0xC6, 0xCE, 0xE6, 0xAE, 0x2A, 0x8A, 0xA4, 
  0xC4, 0xC6, 0xEA, 0xAA, 0xAA, 0xEE, 0x0E, 0x40, 
  0xAA, 0xA8, 0xA8, 0x88, 0xA4, 0x2A, 0x8E, 0xEA, 
  0xAA, 0xA8, 0x4A, 0xAA, 0xAA, 0x28, 0x82, 0xA0, 
  0xEE, 0xC8, 0xAE, 0xEE, 0xE4, 0x2C, 0x8E, 0xEA, 
  0xCA, 0xE4, 0x4A, 0xAE, 0x44, 0x48, 0x42, 0x00, 
  0x8A, 0xA8, 0xA8, 0x8A, 0xA4, 0xAA, 0x8A, 0xEA, 
  0x8E, 0xC2, 0x4A, 0x4E, 0xA4, 0x88, 0x22, 0x00, 
  0x6A, 0xC6, 0xCE, 0x86, 0xAE, 0x4A, 0xEA, 0xA4, 
  0x86, 0xAC, 0x46, 0x4A, 0xA4, 0xEE, 0x0E, 0x0E, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x80, 0x20, 0x20, 0x84, 0x28, 0xC0, 0x00, 
  0x00, 0x00, 0x40, 0x00, 0x00, 0x06, 0x4C, 0x6E, 
  0x4C, 0xC6, 0x66, 0x46, 0xC0, 0x0A, 0x4E, 0xC4, 
  0xC6, 0x66, 0xEA, 0xAA, 0xAA, 0xE4, 0x44, 0xCE, 
  0x06, 0xA8, 0xAA, 0xEA, 0xA4, 0x2C, 0x4E, 0xAA, 
  0xAA, 0x8C, 0x4A, 0xAE, 0x4A, 0x68, 0x02, 0x0E, 
  0x0A, 0xA8, 0xAC, 0x4E, 0xA4, 0x2C, 0x4E, 0xAA, 
  0xAA, 0x86, 0x4A, 0xEE, 0x46, 0xC4, 0x44, 0x0E, 
  0x0E, 0xC6, 0x66, 0x42, 0xA4, 0xAA, 0xEA, 0xA4, 
  0xC6, 0x8C, 0x66, 0x4E, 0xA2, 0xE6, 0x4C, 0x0E, 
  0x00, 0x00, 0x00, 0x04, 0x00, 0x40, 0x00, 0x00, 
  0x82, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
*/

/*
PROGMEM const unsigned char font[] = {
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x11, 0x1F, 0x00, 
  0x1F, 0x11, 0x1F, 0x00, 0x1F, 0x1F, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 
  0x03, 0x00, 0x03, 0x00, 0x1F, 0x0A, 0x1F, 0x00, 
  0x0A, 0x1F, 0x05, 0x00, 0x09, 0x04, 0x12, 0x00, 
  0x0F, 0x17, 0x1C, 0x00, 0x00, 0x03, 0x00, 0x00, 
  0x00, 0x0E, 0x11, 0x00, 0x11, 0x0E, 0x00, 0x00, 
  0x05, 0x02, 0x05, 0x00, 0x04, 0x0E, 0x04, 0x00, 
  0x10, 0x08, 0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 
  0x00, 0x10, 0x00, 0x00, 0x18, 0x04, 0x03, 0x00, 
  0x1E, 0x11, 0x0F, 0x00, 0x02, 0x1F, 0x00, 0x00, 
  0x19, 0x15, 0x12, 0x00, 0x11, 0x15, 0x0A, 0x00, 
  0x07, 0x04, 0x1F, 0x00, 0x17, 0x15, 0x09, 0x00, 
  0x1E, 0x15, 0x1D, 0x00, 0x19, 0x05, 0x03, 0x00, 
  0x1F, 0x15, 0x1F, 0x00, 0x17, 0x15, 0x0F, 0x00, 
  0x00, 0x0A, 0x00, 0x00, 0x10, 0x0A, 0x00, 0x00, 
  0x04, 0x0A, 0x11, 0x00, 0x0A, 0x0A, 0x0A, 0x00, 
  0x11, 0x0A, 0x04, 0x00, 0x01, 0x15, 0x03, 0x00, 
  0x0E, 0x15, 0x16, 0x00, 0x1E, 0x05, 0x1E, 0x00, 
  0x1F, 0x15, 0x0A, 0x00, 0x0E, 0x11, 0x11, 0x00, 
  0x1F, 0x11, 0x0E, 0x00, 0x1F, 0x15, 0x15, 0x00, 
  0x1F, 0x05, 0x05, 0x00, 0x0E, 0x15, 0x1D, 0x00, 
  0x1F, 0x04, 0x1F, 0x00, 0x11, 0x1F, 0x11, 0x00, 
  0x08, 0x10, 0x0F, 0x00, 0x1F, 0x04, 0x1B, 0x00, 
  0x1F, 0x10, 0x10, 0x00, 0x1F, 0x06, 0x1F, 0x00, 
  0x1F, 0x0E, 0x1F, 0x00, 0x0E, 0x11, 0x0E, 0x00, 
  0x1F, 0x05, 0x02, 0x00, 0x0E, 0x19, 0x1E, 0x00, 
  0x1F, 0x0D, 0x16, 0x00, 0x12, 0x15, 0x09, 0x00, 
  0x01, 0x1F, 0x01, 0x00, 0x0F, 0x10, 0x1F, 0x00, 
  0x07, 0x18, 0x07, 0x00, 0x1F, 0x0C, 0x1F, 0x00, 
  0x1B, 0x04, 0x1B, 0x00, 0x03, 0x1C, 0x03, 0x00, 
  0x19, 0x15, 0x13, 0x00, 0x1F, 0x11, 0x11, 0x00, 
  0x02, 0x04, 0x08, 0x00, 0x11, 0x11, 0x1F, 0x00, 
  0x02, 0x01, 0x02, 0x00, 0x10, 0x10, 0x10, 0x00, 
  0x01, 0x02, 0x00, 0x00, 0x1A, 0x16, 0x1C, 0x00, 
  0x1F, 0x12, 0x0C, 0x00, 0x0C, 0x12, 0x12, 0x00, 
  0x0C, 0x12, 0x1F, 0x00, 0x0C, 0x1A, 0x16, 0x00, 
  0x04, 0x1E, 0x05, 0x00, 0x0C, 0x2A, 0x1E, 0x00, 
  0x1F, 0x02, 0x1C, 0x00, 0x00, 0x1D, 0x00, 0x00, 
  0x10, 0x20, 0x1D, 0x00, 0x1F, 0x0C, 0x12, 0x00, 
  0x11, 0x1F, 0x10, 0x00, 0x1E, 0x0E, 0x1E, 0x00, 
  0x1E, 0x02, 0x1C, 0x00, 0x0C, 0x12, 0x0C, 0x00, 
  0x3E, 0x12, 0x0C, 0x00, 0x0C, 0x12, 0x3E, 0x00, 
  0x1C, 0x02, 0x02, 0x00, 0x14, 0x1E, 0x0A, 0x00, 
  0x02, 0x1F, 0x12, 0x00, 0x0E, 0x10, 0x1E, 0x00, 
  0x0E, 0x18, 0x0E, 0x00, 0x1E, 0x1C, 0x1E, 0x00, 
  0x12, 0x0C, 0x12, 0x00, 0x06, 0x28, 0x1E, 0x00, 
  0x1A, 0x1E, 0x16, 0x00, 0x04, 0x1B, 0x11, 0x00, 
  0x00, 0x1B, 0x00, 0x00, 0x11, 0x1B, 0x04, 0x00, 
  0x02, 0x03, 0x01, 0x00, 0x1F, 0x1F, 0x1F, 0x00
};
*/

#endif
